% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/redland-package.R
\docType{package}
\name{redland}
\alias{redland}
\alias{redland-package}
\title{Create, query and write RDF graphs.}
\description{
The R package `redland` provides methods to create, query and write information stored in the
Resource Description Framework (RDF). This package is implemented as R scripts that provide an
R interface (aka "wrapper") to the Redland RDF C libraries that are described at \url{http://librdf.org}.

An introduction to RDF can be found at \url{http://www.w3.org/TR/rdf-primer}.
}
\details{
In order to communicate with the Redland RDF C libraries, the redland R package uses an interface layer that is created
with the software package \strong{Simplified Wrapper and Interface Generator} (\href{http://swig.org}{SWIG}).
The relationship between the redland R package and the Redland C libraries is:

   User script -> redland R package -> SWIG R interface -> Redland C libraries -> RDF data

The redland R package classes and the corresponding Redland C library types are shown in the following table:
\tabular{llll}{
\strong{Concept}\tab \strong{Redland C type}\tab \strong{redland R class}\tab \strong{Purpose}\cr
Resource / Literal\tab librdf_node\tab redland::Node\tab RDF Model & Syntax nodes\cr
Statement / Triple\tab librdf_statement\tab redland::Statement\tab RDF Model & Syntax arcs (statements, triples) [isa Resource]\cr
Model\tab librdf_model\tab redland::Model\tab Set of Statements usually held in one Storage.\cr
Node\tab librdf_node\tab redland::Node\tab The subject, predicate or object of a Statement\cr
Storage\tab librdf_storage\tab redland::Storage\tab Storage for Models either persistant or in-memory.\cr
Stream\tab librdf_stream\tab Not implemented\tab Providing sequences of Statements from Parsers, queries.\cr
Parser\tab librdf_parser\tab redland::Parser\tab Syntaxes parsers delivering Stream of Statements or writing to a Model\cr
Query\tab librdf_query\tab redland::Query\tab Querying of an Model delivering a QueryResults\cr
QueryResults\tab librdf_query_results\tab redland::QueryResults\tab Results of applying an Query to a Model giving either variable bindings with Node values or Stream of Statements\cr
Serializer\tab librdf_serializer\tab redland::Serializer\tab Serializes a Model into a syntax such as RDF/XML\cr
Iterator\tab librdf_iterator\tab Not implemented\tab Enumerating lists (of Node) from queries.\cr
URI\tab librdf_uri\tab Not implemented\tab Provides URIs for Resources, Parsers, ...\cr
World\tab librdf_world\tab redland::World\tab RDF wrapper class handling Redland startup/shutdown\cr
}

It is recommended that the redland package R clasess be used to interact with RDF, however, all of the R interface functions generated by SWIG are made available
by the redland package. These interface fuctions usually have names beginning with \code{'librdf_'}, \code{'rasqal_'} or \code{'raptor_'} and
are usually the same name as the underlying C library function. Documentation
for the R SWIG interface functions can be found via R help i.e. \code{'?librdf_iterator'}. Documentation for the redland R package
wrapper classes and functions are also availabe via R help, i.e. \code{'help("Node-class)'} and \code{'?getNodeType'}.
}
\author{
Matthew B. Jones (NCEAS) and Peter Slaughter (NCEAS)
}

